<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 --><!-- Title: %3 Pages: 1 --><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="1547pt" height="44pt" viewBox="0.00 0.00 1546.98 44.00" id="svg">
<script type="text/javascript" href="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js" id="jquery"/><script type="text/javascript" id="my_javascript"><![CDATA[/**
 * This file contains the functions responsible to highlight the plays, roles and tasks when rendering the SVG file in a browser
 * or any SVG reader that support Javascript.
 */

/**
 * The name of the CSS class for highlighted elements
 * @type {string}
 */
const HIGHLIGHT_CLASS = "highlight";

/**
 * The current selected element on the graph
 * @type {null}
 */
let currentSelectedElement = null;

/**
 * Highlight the linked nodes of the given root element
 * @param {Element} parentElement
 * @param {string[]} visitedElements
 */
function highlightLinkedNodes(parentElement, visitedElements = []) {
    $(parentElement).find('link').each(function (index, element) {
        const linkedElementId = $(element).attr('target');
        const edgeId = $(element).attr('edge');

        const currentElement = $(`#${linkedElementId}`);
        currentElement.addClass(HIGHLIGHT_CLASS);

        // Highlight the edge point to the target
        $(`#${edgeId}`).addClass(HIGHLIGHT_CLASS);

        if (!visitedElements.includes(linkedElementId)) {
            visitedElements.push(linkedElementId);
            // Recursively highlight
            highlightLinkedNodes(currentElement, visitedElements);
        }
    })
}


/**
 * Unhighlight the linked nodes of the given root element
 * @param {Element} parentElement
 * @param {string[]} visitedElements
 * @param {boolean} isHover True when we are coming from a mouseleave event. In that case, we should not unhighlight if
 * the parentElement is the current selected element
 */
function unHighlightLinkedNodes(parentElement, visitedElements = [], isHover) {
    const currentSelectedElementId = $(currentSelectedElement).attr('id');
    // Do not unhighlight the current selected element
    if ($(parentElement).attr('id') !== currentSelectedElementId || !isHover) {

        $(parentElement).find('link').each(function (index, element) {
            const linkedElementId = $(element).attr('target');
            const edgeId = $(element).attr('edge');

            const linkedElement = $(`#${linkedElementId}`);

            if (linkedElement.attr('id') !== currentSelectedElementId) {
                linkedElement.removeClass(HIGHLIGHT_CLASS);

                // Unhighlight the edge point to the target
                $(`#${edgeId}`).removeClass(HIGHLIGHT_CLASS);

                if (!visitedElements.includes(linkedElementId)) {
                    visitedElements.push(linkedElementId);
                    // Recursively unhighlight
                    unHighlightLinkedNodes(linkedElement, visitedElements, isHover);
                }
            }

        })
    }

}

/**
 * Hover handler for mouseenter event
 * @param {Event} event
 */
function hoverMouseEnter(event) {
    highlightLinkedNodes(event.currentTarget, []);
}

/**
 * Hover handler for mouseleave event
 * @param {Event} event
 */
function hoverMouseLeave(event) {
    unHighlightLinkedNodes(event.currentTarget, [], true);
}

/**
 * Handler when clicking on some elements
 * @param {Event} event
 */
function clickOnElement(event) {
    const newClickedElement = $(event.currentTarget);

    event.preventDefault(); // Disable the default click behavior since we override it here

    if (newClickedElement.attr('id') === $(currentSelectedElement).attr('id')) { // clicking again on the same element
        newClickedElement.removeClass(HIGHLIGHT_CLASS);
        unHighlightLinkedNodes(currentSelectedElement, [], false);
        currentSelectedElement = null;
    } else { // clicking on a different node

        // Remove highlight from all the nodes linked to the current selected node
        unHighlightLinkedNodes(currentSelectedElement, [], false);
        if (currentSelectedElement) {
            currentSelectedElement.removeClass(HIGHLIGHT_CLASS);
        }

        newClickedElement.addClass(HIGHLIGHT_CLASS);
        highlightLinkedNodes(newClickedElement, []);
        currentSelectedElement = newClickedElement;
    }
}

/**
 * Handler when double clicking on some elements
 * @param {Event} event
 */
function dblClickElement(event) {
    const newElementDlbClicked = event.currentTarget;
    const links = $(newElementDlbClicked).find("a[xlink\\:href]");

    if (links.length > 0) {
        document.location = $(links[0]).attr("xlink:href");
    } else {
        console.log("No links found on this element");
    }
}


$("#svg").ready(function () {
    let playbooks = $("g[id^=playbook_]");
    let plays = $("g[id^=play_]");
    let roles = $("g[id^=role_]");
    let blocks = $("g[id^=block_]");
    let tasks = $("g[id^=pre_task_], g[id^=task_], g[id^=post_task_]");

    playbooks.hover(hoverMouseEnter, hoverMouseLeave);
    playbooks.click(clickOnElement);
    playbooks.dblclick(dblClickElement);

    // Set hover and click events on the plays
    plays.hover(hoverMouseEnter, hoverMouseLeave);
    plays.click(clickOnElement);
    plays.dblclick(dblClickElement);

    // Set hover and click events on the roles
    roles.hover(hoverMouseEnter, hoverMouseLeave);
    roles.click(clickOnElement);
    roles.dblclick(dblClickElement);

    // Set hover and click events on the blocks
    blocks.hover(hoverMouseEnter, hoverMouseLeave);
    blocks.click(clickOnElement);
    blocks.dblclick(dblClickElement);

    // Set hover and click events on the tasks
    tasks.hover(hoverMouseEnter, hoverMouseLeave);
    tasks.click(clickOnElement);
    tasks.dblclick(dblClickElement);

});
]]></script><style type="text/css" id="my_css"><![CDATA[/**
 Hover on nodes, edges, path and polygon
 */
.node:hover, .edge:hover, path:hover, path + polygon:hover {
    cursor: pointer;
    stroke-width: 3;
    font-weight: bolder;
}

/**
 Manually added class by the script highlight-hover.js when hovering on plays and roles
 */
.highlight {
    cursor: pointer;
    stroke-width: 3;
    font-weight: bolder;
}
]]></style><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 40)">
<title>%3</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-40 1542.98,-40 1542.98,4 -4,4"/>
<!-- 1&#45;playbook&#45;cluster&#45;setup.yml -->
<g id="playbook_dee722f1" class="node">
<title>1-playbook-cluster-setup.yml</title>
<g id="a_playbook_dee722f1"><a xlink:href="/home/ridha/huxium/production-ready-kubernetes-cluster/1-playbook-cluster-setup.yml" xlink:title="1-playbook-cluster-setup.yml">
<ellipse fill="none" stroke="black" stroke-dasharray="1,5" cx="144.94" cy="-18" rx="144.87" ry="18"/>
<text text-anchor="middle" x="144.94" y="-14.3" font-family="Times,serif" font-size="14.00">1-playbook-cluster-setup.yml</text>
</a>
</g>
<links><link target="play_4aa2fdc4" edge="edge_1_playbook_dee722f1_play_4aa2fdc4"/></links></g>
<!-- play_4aa2fdc4 -->
<g id="play_4aa2fdc4" class="node">
<title>play_4aa2fdc4</title>
<g id="a_play_4aa2fdc4"><a xlink:href="/home/ridha/huxium/production-ready-kubernetes-cluster/1-playbook-cluster-setup.yml" xlink:title="k8smaster01">
<polygon fill="#ad1f33" stroke="#ad1f33" points="795.87,-36 559.87,-36 559.87,0 795.87,0 795.87,-36"/>
<text text-anchor="middle" x="677.87" y="-14.3" font-family="Times,serif" font-size="14.00" fill="#ffffff">Play: Untaint master nodes (1)</text>
</a>
</g>
<links><link target="role_8dafb4a3" edge="edge_1_play_4aa2fdc4_role_8dafb4a3"/></links></g>
<!-- 1&#45;playbook&#45;cluster&#45;setup.yml&#45;&gt;play_4aa2fdc4 -->
<g id="edge_playbook_dee722f1_play_4aa2fdc4" class="edge">
<title>1-playbook-cluster-setup.yml-&gt;play_4aa2fdc4</title>
<g id="a_edge_playbook_dee722f1_play_4aa2fdc4"><a xlink:title="1 Play: Untaint master nodes (1)">
<path fill="none" stroke="#ad1f33" d="M289.97,-18C370.93,-18 471.11,-18 549.25,-18" id="path_edge_playbook_dee722f1_play_4aa2fdc4"/>
<polygon fill="#ad1f33" stroke="#ad1f33" points="549.64,-21.5 559.64,-18 549.64,-14.5 549.64,-21.5"/>
</a>
</g>
<g id="a_edge_playbook_dee722f1_play_4aa2fdc4-label"><a xlink:title="1 Play: Untaint master nodes (1)">
<text text-anchor="middle" font-family="Times,serif" font-size="14.00" fill="#ad1f33" dy="-0.2%"><textPath xlink:href="#path_edge_playbook_dee722f1_play_4aa2fdc4" startOffset="165.0528">1 Play: Untaint master nodes (1)</textPath></text>
</a>
</g>
</g>
<!-- role_8dafb4a3 -->
<g id="role_8dafb4a3" class="node">
<title>role_8dafb4a3</title>
<g id="a_role_8dafb4a3"><a xlink:href="/home/ridha/huxium/production-ready-kubernetes-cluster/roles/15-untaint-masters" xlink:title="15-untaint-masters">
<ellipse fill="none" stroke="#ad1f33" cx="973.26" cy="-18" rx="127.28" ry="18"/>
<text text-anchor="middle" x="973.26" y="-14.3" font-family="Times,serif" font-size="14.00">[role] 15-untaint-masters</text>
</a>
</g>
<links><link target="task_bb7dd9f8" edge="edge_1_role_8dafb4a3_task_bb7dd9f8"/></links></g>
<!-- play_4aa2fdc4&#45;&gt;role_8dafb4a3 -->
<g id="edge_1_play_4aa2fdc4_role_8dafb4a3" class="edge">
<title>play_4aa2fdc4-&gt;role_8dafb4a3</title>
<g id="a_edge_1_play_4aa2fdc4_role_8dafb4a3"><a xlink:title="1 ">
<path fill="none" stroke="#ad1f33" d="M796.09,-18C809.07,-18 822.36,-18 835.55,-18" id="path_edge_1_play_4aa2fdc4_role_8dafb4a3"/>
<polygon fill="#ad1f33" stroke="#ad1f33" points="835.6,-21.5 845.6,-18 835.6,-14.5 835.6,-21.5"/>
</a>
</g>
<g id="a_edge_1_play_4aa2fdc4_role_8dafb4a3-label"><a xlink:title="1 ">
<text text-anchor="middle" font-family="Times,serif" font-size="14.00" fill="#ad1f33" dy="-0.2%"><textPath xlink:href="#path_edge_1_play_4aa2fdc4_role_8dafb4a3" startOffset="27.989599999999943">1 </textPath></text>
</a>
</g>
</g>
<!-- task_bb7dd9f8 -->
<g id="task_bb7dd9f8" class="node">
<title>task_bb7dd9f8</title>
<g id="a_task_bb7dd9f8"><a xlink:href="/home/ridha/huxium/production-ready-kubernetes-cluster/roles/15-untaint-masters/tasks/main.yml" xlink:title="15-untaint-masters : Untaint master">
<polygon fill="none" stroke="#ad1f33" points="1539.14,-10.54 1539.14,-25.46 1425.31,-36 1264.32,-36 1150.49,-25.46 1150.49,-10.54 1264.32,0 1425.31,0 1539.14,-10.54"/>
<text text-anchor="middle" x="1344.82" y="-14.3" font-family="Times,serif" font-size="14.00">15-untaint-masters : Untaint master</text>
</a>
</g>
</g>
<!-- role_8dafb4a3&#45;&gt;task_bb7dd9f8 -->
<g id="edge_1_role_8dafb4a3_task_bb7dd9f8" class="edge">
<title>role_8dafb4a3-&gt;task_bb7dd9f8</title>
<g id="a_edge_1_role_8dafb4a3_task_bb7dd9f8"><a xlink:title="1 ">
<path fill="none" stroke="#ad1f33" d="M1100.67,-18C1113.49,-18 1126.74,-18 1140.11,-18" id="path_edge_1_role_8dafb4a3_task_bb7dd9f8"/>
<polygon fill="#ad1f33" stroke="#ad1f33" points="1140.36,-21.5 1150.36,-18 1140.36,-14.5 1140.36,-21.5"/>
</a>
</g>
<g id="a_edge_1_role_8dafb4a3_task_bb7dd9f8-label"><a xlink:title="1 ">
<text text-anchor="middle" font-family="Times,serif" font-size="14.00" fill="#ad1f33" dy="-0.2%"><textPath xlink:href="#path_edge_1_role_8dafb4a3_task_bb7dd9f8" startOffset="27.974399999999868">1 </textPath></text>
</a>
</g>
</g>
</g>
</svg>