<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 --><!-- Title: %3 Pages: 1 --><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="1762pt" height="44pt" viewBox="0.00 0.00 1762.16 44.00" id="svg">
<script type="text/javascript" href="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js" id="jquery"/><script type="text/javascript" id="my_javascript"><![CDATA[/**
 * This file contains the functions responsible to highlight the plays, roles and tasks when rendering the SVG file in a browser
 * or any SVG reader that support Javascript.
 */

/**
 * The name of the CSS class for highlighted elements
 * @type {string}
 */
const HIGHLIGHT_CLASS = "highlight";

/**
 * The current selected element on the graph
 * @type {null}
 */
let currentSelectedElement = null;

/**
 * Highlight the linked nodes of the given root element
 * @param {Element} parentElement
 * @param {string[]} visitedElements
 */
function highlightLinkedNodes(parentElement, visitedElements = []) {
    $(parentElement).find('link').each(function (index, element) {
        const linkedElementId = $(element).attr('target');
        const edgeId = $(element).attr('edge');

        const currentElement = $(`#${linkedElementId}`);
        currentElement.addClass(HIGHLIGHT_CLASS);

        // Highlight the edge point to the target
        $(`#${edgeId}`).addClass(HIGHLIGHT_CLASS);

        if (!visitedElements.includes(linkedElementId)) {
            visitedElements.push(linkedElementId);
            // Recursively highlight
            highlightLinkedNodes(currentElement, visitedElements);
        }
    })
}


/**
 * Unhighlight the linked nodes of the given root element
 * @param {Element} parentElement
 * @param {string[]} visitedElements
 * @param {boolean} isHover True when we are coming from a mouseleave event. In that case, we should not unhighlight if
 * the parentElement is the current selected element
 */
function unHighlightLinkedNodes(parentElement, visitedElements = [], isHover) {
    const currentSelectedElementId = $(currentSelectedElement).attr('id');
    // Do not unhighlight the current selected element
    if ($(parentElement).attr('id') !== currentSelectedElementId || !isHover) {

        $(parentElement).find('link').each(function (index, element) {
            const linkedElementId = $(element).attr('target');
            const edgeId = $(element).attr('edge');

            const linkedElement = $(`#${linkedElementId}`);

            if (linkedElement.attr('id') !== currentSelectedElementId) {
                linkedElement.removeClass(HIGHLIGHT_CLASS);

                // Unhighlight the edge point to the target
                $(`#${edgeId}`).removeClass(HIGHLIGHT_CLASS);

                if (!visitedElements.includes(linkedElementId)) {
                    visitedElements.push(linkedElementId);
                    // Recursively unhighlight
                    unHighlightLinkedNodes(linkedElement, visitedElements, isHover);
                }
            }

        })
    }

}

/**
 * Hover handler for mouseenter event
 * @param {Event} event
 */
function hoverMouseEnter(event) {
    highlightLinkedNodes(event.currentTarget, []);
}

/**
 * Hover handler for mouseleave event
 * @param {Event} event
 */
function hoverMouseLeave(event) {
    unHighlightLinkedNodes(event.currentTarget, [], true);
}

/**
 * Handler when clicking on some elements
 * @param {Event} event
 */
function clickOnElement(event) {
    const newClickedElement = $(event.currentTarget);

    event.preventDefault(); // Disable the default click behavior since we override it here

    if (newClickedElement.attr('id') === $(currentSelectedElement).attr('id')) { // clicking again on the same element
        newClickedElement.removeClass(HIGHLIGHT_CLASS);
        unHighlightLinkedNodes(currentSelectedElement, [], false);
        currentSelectedElement = null;
    } else { // clicking on a different node

        // Remove highlight from all the nodes linked to the current selected node
        unHighlightLinkedNodes(currentSelectedElement, [], false);
        if (currentSelectedElement) {
            currentSelectedElement.removeClass(HIGHLIGHT_CLASS);
        }

        newClickedElement.addClass(HIGHLIGHT_CLASS);
        highlightLinkedNodes(newClickedElement, []);
        currentSelectedElement = newClickedElement;
    }
}

/**
 * Handler when double clicking on some elements
 * @param {Event} event
 */
function dblClickElement(event) {
    const newElementDlbClicked = event.currentTarget;
    const links = $(newElementDlbClicked).find("a[xlink\\:href]");

    if (links.length > 0) {
        document.location = $(links[0]).attr("xlink:href");
    } else {
        console.log("No links found on this element");
    }
}


$("#svg").ready(function () {
    let playbooks = $("g[id^=playbook_]");
    let plays = $("g[id^=play_]");
    let roles = $("g[id^=role_]");
    let blocks = $("g[id^=block_]");
    let tasks = $("g[id^=pre_task_], g[id^=task_], g[id^=post_task_]");

    playbooks.hover(hoverMouseEnter, hoverMouseLeave);
    playbooks.click(clickOnElement);
    playbooks.dblclick(dblClickElement);

    // Set hover and click events on the plays
    plays.hover(hoverMouseEnter, hoverMouseLeave);
    plays.click(clickOnElement);
    plays.dblclick(dblClickElement);

    // Set hover and click events on the roles
    roles.hover(hoverMouseEnter, hoverMouseLeave);
    roles.click(clickOnElement);
    roles.dblclick(dblClickElement);

    // Set hover and click events on the blocks
    blocks.hover(hoverMouseEnter, hoverMouseLeave);
    blocks.click(clickOnElement);
    blocks.dblclick(dblClickElement);

    // Set hover and click events on the tasks
    tasks.hover(hoverMouseEnter, hoverMouseLeave);
    tasks.click(clickOnElement);
    tasks.dblclick(dblClickElement);

});
]]></script><style type="text/css" id="my_css"><![CDATA[/**
 Hover on nodes, edges, path and polygon
 */
.node:hover, .edge:hover, path:hover, path + polygon:hover {
    cursor: pointer;
    stroke-width: 3;
    font-weight: bolder;
}

/**
 Manually added class by the script highlight-hover.js when hovering on plays and roles
 */
.highlight {
    cursor: pointer;
    stroke-width: 3;
    font-weight: bolder;
}
]]></style><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 40)">
<title>%3</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-40 1758.16,-40 1758.16,4 -4,4"/>
<!-- 1&#45;playbook&#45;cluster&#45;setup.yml -->
<g id="playbook_4762ee72" class="node">
<title>1-playbook-cluster-setup.yml</title>
<g id="a_playbook_4762ee72"><a xlink:href="/home/ridha/huxium/production-ready-kubernetes-cluster/1-playbook-cluster-setup.yml" xlink:title="1-playbook-cluster-setup.yml">
<ellipse fill="none" stroke="black" stroke-dasharray="1,5" cx="144.94" cy="-18" rx="144.87" ry="18"/>
<text text-anchor="middle" x="144.94" y="-14.3" font-family="Times,serif" font-size="14.00">1-playbook-cluster-setup.yml</text>
</a>
</g>
<links><link target="play_9053cd94" edge="edge_1_playbook_4762ee72_play_9053cd94"/></links></g>
<!-- play_9053cd94 -->
<g id="play_9053cd94" class="node">
<title>play_9053cd94</title>
<g id="a_play_9053cd94"><a xlink:href="/home/ridha/huxium/production-ready-kubernetes-cluster/1-playbook-cluster-setup.yml" xlink:title="k8sworker01,k8sworker02,k8sworker03,k8sworker04,k8sworker05,k8sworker06,storage01">
<polygon fill="#2f0bc1" stroke="#2f0bc1" points="807.87,-36 565.87,-36 565.87,0 807.87,0 807.87,-36"/>
<text text-anchor="middle" x="686.87" y="-14.3" font-family="Times,serif" font-size="14.00" fill="#ffffff">Play: Prepare block storage. (7)</text>
</a>
</g>
<links><link target="role_1df7d60a" edge="edge_1_play_9053cd94_role_1df7d60a"/></links></g>
<!-- 1&#45;playbook&#45;cluster&#45;setup.yml&#45;&gt;play_9053cd94 -->
<g id="edge_playbook_4762ee72_play_9053cd94" class="edge">
<title>1-playbook-cluster-setup.yml-&gt;play_9053cd94</title>
<g id="a_edge_playbook_4762ee72_play_9053cd94"><a xlink:title="1 Play: Prepare block storage. (7)">
<path fill="none" stroke="#2f0bc1" d="M289.92,-18C372.46,-18 475.24,-18 555.41,-18" id="path_edge_playbook_4762ee72_play_9053cd94"/>
<polygon fill="#2f0bc1" stroke="#2f0bc1" points="555.56,-21.5 565.56,-18 555.56,-14.5 555.56,-21.5"/>
</a>
</g>
<g id="a_edge_playbook_4762ee72_play_9053cd94-label"><a xlink:title="1 Play: Prepare block storage. (7)">
<text text-anchor="middle" font-family="Times,serif" font-size="14.00" fill="#2f0bc1" dy="-0.2%"><textPath xlink:href="#path_edge_playbook_4762ee72_play_9053cd94" startOffset="167.77239999999998">1 Play: Prepare block storage. (7)</textPath></text>
</a>
</g>
</g>
<!-- role_1df7d60a -->
<g id="role_1df7d60a" class="node">
<title>role_1df7d60a</title>
<g id="a_role_1df7d60a"><a xlink:href="/home/ridha/huxium/production-ready-kubernetes-cluster/roles/16-format-block-storage" xlink:title="16-format-block-storage">
<ellipse fill="none" stroke="#2f0bc1" cx="1007.36" cy="-18" rx="149.47" ry="18"/>
<text text-anchor="middle" x="1007.36" y="-14.3" font-family="Times,serif" font-size="14.00">[role] 16-format-block-storage</text>
</a>
</g>
<links><link target="task_f296da10" edge="edge_1_role_1df7d60a_task_f296da10"/></links></g>
<!-- play_9053cd94&#45;&gt;role_1df7d60a -->
<g id="edge_1_play_9053cd94_role_1df7d60a" class="edge">
<title>play_9053cd94-&gt;role_1df7d60a</title>
<g id="a_edge_1_play_9053cd94_role_1df7d60a"><a xlink:title="1 ">
<path fill="none" stroke="#2f0bc1" d="M808.28,-18C821.12,-18 834.33,-18 847.53,-18" id="path_edge_1_play_9053cd94_role_1df7d60a"/>
<polygon fill="#2f0bc1" stroke="#2f0bc1" points="847.61,-21.5 857.61,-18 847.61,-14.5 847.61,-21.5"/>
</a>
</g>
<g id="a_edge_1_play_9053cd94_role_1df7d60a-label"><a xlink:title="1 ">
<text text-anchor="middle" font-family="Times,serif" font-size="14.00" fill="#2f0bc1" dy="-0.2%"><textPath xlink:href="#path_edge_1_play_9053cd94_role_1df7d60a" startOffset="27.830000000000002">1 </textPath></text>
</a>
</g>
</g>
<!-- task_f296da10 -->
<g id="task_f296da10" class="node">
<title>task_f296da10</title>
<g id="a_task_f296da10"><a xlink:href="/home/ridha/huxium/production-ready-kubernetes-cluster/roles/16-format-block-storage/tasks/main.yml" xlink:title="16-format-block-storage : Format raw block storage.">
<polygon fill="none" stroke="#2f0bc1" points="1754.32,-10.54 1754.32,-25.46 1593.93,-36 1367.09,-36 1206.69,-25.46 1206.69,-10.54 1367.09,0 1593.93,0 1754.32,-10.54"/>
<text text-anchor="middle" x="1480.51" y="-14.3" font-family="Times,serif" font-size="14.00">16-format-block-storage : Format raw block storage.</text>
</a>
</g>
</g>
<!-- role_1df7d60a&#45;&gt;task_f296da10 -->
<g id="edge_1_role_1df7d60a_task_f296da10" class="edge">
<title>role_1df7d60a-&gt;task_f296da10</title>
<g id="a_edge_1_role_1df7d60a_task_f296da10"><a xlink:title="1 ">
<path fill="none" stroke="#2f0bc1" d="M1157.11,-18C1169.9,-18 1183.08,-18 1196.48,-18" id="path_edge_1_role_1df7d60a_task_f296da10"/>
<polygon fill="#2f0bc1" stroke="#2f0bc1" points="1196.76,-21.5 1206.76,-18 1196.76,-14.5 1196.76,-21.5"/>
</a>
</g>
<g id="a_edge_1_role_1df7d60a_task_f296da10-label"><a xlink:title="1 ">
<text text-anchor="middle" font-family="Times,serif" font-size="14.00" fill="#2f0bc1" dy="-0.2%"><textPath xlink:href="#path_edge_1_role_1df7d60a_task_f296da10" startOffset="27.92120000000009">1 </textPath></text>
</a>
</g>
</g>
</g>
</svg>