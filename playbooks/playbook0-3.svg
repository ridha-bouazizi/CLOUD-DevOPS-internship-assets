<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 --><!-- Title: %3 Pages: 1 --><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="1169pt" height="44pt" viewBox="0.00 0.00 1168.89 44.00" id="svg">
<script type="text/javascript" href="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js" id="jquery"/><script type="text/javascript" id="my_javascript"><![CDATA[/**
 * This file contains the functions responsible to highlight the plays, roles and tasks when rendering the SVG file in a browser
 * or any SVG reader that support Javascript.
 */

/**
 * The name of the CSS class for highlighted elements
 * @type {string}
 */
const HIGHLIGHT_CLASS = "highlight";

/**
 * The current selected element on the graph
 * @type {null}
 */
let currentSelectedElement = null;

/**
 * Highlight the linked nodes of the given root element
 * @param {Element} parentElement
 * @param {string[]} visitedElements
 */
function highlightLinkedNodes(parentElement, visitedElements = []) {
    $(parentElement).find('link').each(function (index, element) {
        const linkedElementId = $(element).attr('target');
        const edgeId = $(element).attr('edge');

        const currentElement = $(`#${linkedElementId}`);
        currentElement.addClass(HIGHLIGHT_CLASS);

        // Highlight the edge point to the target
        $(`#${edgeId}`).addClass(HIGHLIGHT_CLASS);

        if (!visitedElements.includes(linkedElementId)) {
            visitedElements.push(linkedElementId);
            // Recursively highlight
            highlightLinkedNodes(currentElement, visitedElements);
        }
    })
}


/**
 * Unhighlight the linked nodes of the given root element
 * @param {Element} parentElement
 * @param {string[]} visitedElements
 * @param {boolean} isHover True when we are coming from a mouseleave event. In that case, we should not unhighlight if
 * the parentElement is the current selected element
 */
function unHighlightLinkedNodes(parentElement, visitedElements = [], isHover) {
    const currentSelectedElementId = $(currentSelectedElement).attr('id');
    // Do not unhighlight the current selected element
    if ($(parentElement).attr('id') !== currentSelectedElementId || !isHover) {

        $(parentElement).find('link').each(function (index, element) {
            const linkedElementId = $(element).attr('target');
            const edgeId = $(element).attr('edge');

            const linkedElement = $(`#${linkedElementId}`);

            if (linkedElement.attr('id') !== currentSelectedElementId) {
                linkedElement.removeClass(HIGHLIGHT_CLASS);

                // Unhighlight the edge point to the target
                $(`#${edgeId}`).removeClass(HIGHLIGHT_CLASS);

                if (!visitedElements.includes(linkedElementId)) {
                    visitedElements.push(linkedElementId);
                    // Recursively unhighlight
                    unHighlightLinkedNodes(linkedElement, visitedElements, isHover);
                }
            }

        })
    }

}

/**
 * Hover handler for mouseenter event
 * @param {Event} event
 */
function hoverMouseEnter(event) {
    highlightLinkedNodes(event.currentTarget, []);
}

/**
 * Hover handler for mouseleave event
 * @param {Event} event
 */
function hoverMouseLeave(event) {
    unHighlightLinkedNodes(event.currentTarget, [], true);
}

/**
 * Handler when clicking on some elements
 * @param {Event} event
 */
function clickOnElement(event) {
    const newClickedElement = $(event.currentTarget);

    event.preventDefault(); // Disable the default click behavior since we override it here

    if (newClickedElement.attr('id') === $(currentSelectedElement).attr('id')) { // clicking again on the same element
        newClickedElement.removeClass(HIGHLIGHT_CLASS);
        unHighlightLinkedNodes(currentSelectedElement, [], false);
        currentSelectedElement = null;
    } else { // clicking on a different node

        // Remove highlight from all the nodes linked to the current selected node
        unHighlightLinkedNodes(currentSelectedElement, [], false);
        if (currentSelectedElement) {
            currentSelectedElement.removeClass(HIGHLIGHT_CLASS);
        }

        newClickedElement.addClass(HIGHLIGHT_CLASS);
        highlightLinkedNodes(newClickedElement, []);
        currentSelectedElement = newClickedElement;
    }
}

/**
 * Handler when double clicking on some elements
 * @param {Event} event
 */
function dblClickElement(event) {
    const newElementDlbClicked = event.currentTarget;
    const links = $(newElementDlbClicked).find("a[xlink\\:href]");

    if (links.length > 0) {
        document.location = $(links[0]).attr("xlink:href");
    } else {
        console.log("No links found on this element");
    }
}


$("#svg").ready(function () {
    let playbooks = $("g[id^=playbook_]");
    let plays = $("g[id^=play_]");
    let roles = $("g[id^=role_]");
    let blocks = $("g[id^=block_]");
    let tasks = $("g[id^=pre_task_], g[id^=task_], g[id^=post_task_]");

    playbooks.hover(hoverMouseEnter, hoverMouseLeave);
    playbooks.click(clickOnElement);
    playbooks.dblclick(dblClickElement);

    // Set hover and click events on the plays
    plays.hover(hoverMouseEnter, hoverMouseLeave);
    plays.click(clickOnElement);
    plays.dblclick(dblClickElement);

    // Set hover and click events on the roles
    roles.hover(hoverMouseEnter, hoverMouseLeave);
    roles.click(clickOnElement);
    roles.dblclick(dblClickElement);

    // Set hover and click events on the blocks
    blocks.hover(hoverMouseEnter, hoverMouseLeave);
    blocks.click(clickOnElement);
    blocks.dblclick(dblClickElement);

    // Set hover and click events on the tasks
    tasks.hover(hoverMouseEnter, hoverMouseLeave);
    tasks.click(clickOnElement);
    tasks.dblclick(dblClickElement);

});
]]></script><style type="text/css" id="my_css"><![CDATA[/**
 Hover on nodes, edges, path and polygon
 */
.node:hover, .edge:hover, path:hover, path + polygon:hover {
    cursor: pointer;
    stroke-width: 3;
    font-weight: bolder;
}

/**
 Manually added class by the script highlight-hover.js when hovering on plays and roles
 */
.highlight {
    cursor: pointer;
    stroke-width: 3;
    font-weight: bolder;
}
]]></style><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 40)">
<title>%3</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-40 1164.89,-40 1164.89,4 -4,4"/>
<!-- 0&#45;playbook&#45;servers.yml -->
<g id="playbook_e6fca525" class="node">
<title>0-playbook-servers.yml</title>
<g id="a_playbook_e6fca525"><a xlink:href="/home/ridha/huxium/production-ready-kubernetes-cluster/0-playbook-servers.yml" xlink:title="0-playbook-servers.yml">
<ellipse fill="none" stroke="black" stroke-dasharray="1,5" cx="118.29" cy="-18" rx="118.08" ry="18"/>
<text text-anchor="middle" x="118.29" y="-14.3" font-family="Times,serif" font-size="14.00">0-playbook-servers.yml</text>
</a>
</g>
<links><link target="play_42f1d503" edge="edge_1_playbook_e6fca525_play_42f1d503"/></links></g>
<!-- play_42f1d503 -->
<g id="play_42f1d503" class="node">
<title>play_42f1d503</title>
<g id="a_play_42f1d503"><a xlink:href="/home/ridha/huxium/production-ready-kubernetes-cluster/0-playbook-servers.yml" xlink:title="k8smaster01,k8sworker01,k8sworker02,k8sworker03,k8sworker04,k8sworker05,k8sworker06,storage01">
<polygon fill="#28c309" stroke="#28c309" points="637.58,-36 453.58,-36 453.58,0 637.58,0 637.58,-36"/>
<text text-anchor="middle" x="545.58" y="-14.3" font-family="Times,serif" font-size="14.00" fill="#ffffff">Play: Edit /etc/hosts (8)</text>
</a>
</g>
<links><link target="role_e0e6f114" edge="edge_1_play_42f1d503_role_e0e6f114"/></links></g>
<!-- 0&#45;playbook&#45;servers.yml&#45;&gt;play_42f1d503 -->
<g id="edge_playbook_e6fca525_play_42f1d503" class="edge">
<title>0-playbook-servers.yml-&gt;play_42f1d503</title>
<g id="a_edge_playbook_e6fca525_play_42f1d503"><a xlink:title="1 Play: Edit /etc/hosts (8)">
<path fill="none" stroke="#28c309" d="M236.63,-18C301.49,-18 381.27,-18 443.37,-18" id="path_edge_playbook_e6fca525_play_42f1d503"/>
<polygon fill="#28c309" stroke="#28c309" points="443.58,-21.5 453.58,-18 443.58,-14.5 443.58,-21.5"/>
</a>
</g>
<g id="a_edge_playbook_e6fca525_play_42f1d503-label"><a xlink:title="1 Play: Edit /etc/hosts (8)">
<text text-anchor="middle" font-family="Times,serif" font-size="14.00" fill="#28c309" dy="-0.2%"><textPath xlink:href="#path_edge_playbook_e6fca525_play_42f1d503" startOffset="130.1224">1 Play: Edit /etc/hosts (8)</textPath></text>
</a>
</g>
</g>
<!-- role_e0e6f114 -->
<g id="role_e0e6f114" class="node">
<title>role_e0e6f114</title>
<g id="a_role_e0e6f114"><a xlink:href="/home/ridha/huxium/production-ready-kubernetes-cluster/roles/10-hosts" xlink:title="10-hosts">
<ellipse fill="none" stroke="#28c309" cx="765.57" cy="-18" rx="77.99" ry="18"/>
<text text-anchor="middle" x="765.57" y="-14.3" font-family="Times,serif" font-size="14.00">[role] 10-hosts</text>
</a>
</g>
<links><link target="task_5c88a1fc" edge="edge_1_role_e0e6f114_task_5c88a1fc"/></links></g>
<!-- play_42f1d503&#45;&gt;role_e0e6f114 -->
<g id="edge_1_play_42f1d503_role_e0e6f114" class="edge">
<title>play_42f1d503-&gt;role_e0e6f114</title>
<g id="a_edge_1_play_42f1d503_role_e0e6f114"><a xlink:title="1 ">
<path fill="none" stroke="#28c309" d="M637.76,-18C650.84,-18 664.26,-18 677.26,-18" id="path_edge_1_play_42f1d503_role_e0e6f114"/>
<polygon fill="#28c309" stroke="#28c309" points="677.57,-21.5 687.57,-18 677.57,-14.5 677.57,-21.5"/>
</a>
</g>
<g id="a_edge_1_play_42f1d503_role_e0e6f114-label"><a xlink:title="1 ">
<text text-anchor="middle" font-family="Times,serif" font-size="14.00" fill="#28c309" dy="-0.2%"><textPath xlink:href="#path_edge_1_play_42f1d503_role_e0e6f114" startOffset="28.02">1 </textPath></text>
</a>
</g>
</g>
<!-- task_5c88a1fc -->
<g id="task_5c88a1fc" class="node">
<title>task_5c88a1fc</title>
<g id="a_task_5c88a1fc"><a xlink:href="/home/ridha/huxium/production-ready-kubernetes-cluster/roles/10-hosts/tasks/main.yml" xlink:title="10-hosts : Edit hosts file">
<polygon fill="none" stroke="#28c309" points="1161.06,-10.54 1161.06,-25.46 1082.66,-36 971.8,-36 893.4,-25.46 893.4,-10.54 971.8,0 1082.66,0 1161.06,-10.54"/>
<text text-anchor="middle" x="1027.23" y="-14.3" font-family="Times,serif" font-size="14.00">10-hosts : Edit hosts file</text>
</a>
</g>
</g>
<!-- role_e0e6f114&#45;&gt;task_5c88a1fc -->
<g id="edge_1_role_e0e6f114_task_5c88a1fc" class="edge">
<title>role_e0e6f114-&gt;task_5c88a1fc</title>
<g id="a_edge_1_role_e0e6f114_task_5c88a1fc"><a xlink:title="1 ">
<path fill="none" stroke="#28c309" d="M843.77,-18C856.28,-18 869.58,-18 883.06,-18" id="path_edge_1_role_e0e6f114_task_5c88a1fc"/>
<polygon fill="#28c309" stroke="#28c309" points="883.4,-21.5 893.4,-18 883.4,-14.5 883.4,-21.5"/>
</a>
</g>
<g id="a_edge_1_role_e0e6f114_task_5c88a1fc-label"><a xlink:title="1 ">
<text text-anchor="middle" font-family="Times,serif" font-size="14.00" fill="#28c309" dy="-0.2%"><textPath xlink:href="#path_edge_1_role_e0e6f114_task_5c88a1fc" startOffset="27.860399999999974">1 </textPath></text>
</a>
</g>
</g>
</g>
</svg>